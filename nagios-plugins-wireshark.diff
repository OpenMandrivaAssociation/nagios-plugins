diff -Naur nagios-plugins-1.4.3/contrib/check_ica_master_browser.pl nagios-plugins-1.4.3.oden/contrib/check_ica_master_browser.pl
--- nagios-plugins-1.4.3/contrib/check_ica_master_browser.pl	2005-01-25 10:09:33.000000000 +0100
+++ nagios-plugins-1.4.3.oden/contrib/check_ica_master_browser.pl	2006-09-06 17:12:49.000000000 +0200
@@ -15,7 +15,7 @@
 
 use lib qw(/usr/local/nagios/libexec) ;
 use utils qw(%ERRORS &print_revision &support &usage);
-use packet_utils qw(&pdump &tethereal) ;
+use packet_utils qw(&pdump &tshark) ;
 
 my $PROGNAME = 'check_ica_master_browser' ;
 
@@ -66,17 +66,17 @@
 												# this info was gathered with tcpdump whilst trying to use an ICA client,
 												# so I'm not 100% sure of what each value is.
 
-my $bcast_helo = &tethereal(<<'End_of_Tethereal_trace', '1e') ;
+my $bcast_helo = &tshark(<<'End_of_Tshark_trace', '1e') ;
 0020  ff ff 04 d6 06 44 00 26 4a 76 1e 00 01 30 02 fd   .....D.&Jv...0..
 0030  a8 e3 00 02 f5 95 9f f5 30 07 00 00 00 00 00 00   ........0.......
 0040  00 00 00 00 00 00 01 00                           ........
-End_of_Tethereal_trace
+End_of_Tshark_trace
 
-my $direct_helo = &tethereal(<<'End_of_Tethereal_trace', '20') ;
+my $direct_helo = &tshark(<<'End_of_Tshark_trace', '20') ;
 0020  64 17 05 0f 06 44 00 28 ab b5 20 00 01 30 02 fd   d....D.(.. ..0..
 0030  a8 e3 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................
 0040  00 00 00 00 00 00 00 00 00 00                     ........
-End_of_Tethereal_trace
+End_of_Tshark_trace
 
 my $Udp =  IO::Socket::INET->new( Proto => 'udp' )
 	|| die "Socket failure: $!";
diff -Naur nagios-plugins-1.4.3/contrib/check_ica_metaframe_pub_apps.pl nagios-plugins-1.4.3.oden/contrib/check_ica_metaframe_pub_apps.pl
--- nagios-plugins-1.4.3/contrib/check_ica_metaframe_pub_apps.pl	2005-01-25 10:07:39.000000000 +0100
+++ nagios-plugins-1.4.3.oden/contrib/check_ica_metaframe_pub_apps.pl	2006-09-06 17:12:49.000000000 +0200
@@ -20,7 +20,7 @@
 
 use lib qw(/usr/local/nagios/libexec) ;
 use utils qw(%ERRORS &print_revision &support &usage) ;
-use packet_utils qw(&pdump &tethereal) ;
+use packet_utils qw(&pdump &tshark) ;
 
 my $PROGNAME = 'check_ica_metaframe_pub_apps' ;
 
@@ -85,30 +85,30 @@
 										# this info was gathered with tcpdump whilst trying to use an ICA client,
 										# so I'm not 100% sure of what each value is.
 
-my $bcast_helo = &tethereal(<<'End_of_Tethereal_trace', '1e') ;
+my $bcast_helo = &tshark(<<'End_of_Tshark_trace', '1e') ;
 0020  ff ff 04 d6 06 44 00 26 4a 76 1e 00 01 30 02 fd   .....D.&Jv...0..
 0030  a8 e3 00 02 f5 95 9f f5 30 07 00 00 00 00 00 00   ........0.......
 0040  00 00 00 00 00 00 01 00                           .......
-End_of_Tethereal_trace
+End_of_Tshark_trace
 
-my $bcast_query_app = &tethereal(<<'End_of_Tethereal_trace', '24') ;
+my $bcast_query_app = &tshark(<<'End_of_Tshark_trace', '24') ;
 0020  64 17 04 50 06 44 00 2c 85 6a 24 00 01 32 02 fd   d..P.D.,.j$..2..
 0030  a8 e3 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................
 0040  00 00 00 00 00 00 21 00 02 00 00 00 00 00         ......!......
-End_of_Tethereal_trace
+End_of_Tshark_trace
 
-my $direct_helo = &tethereal(<<'End_of_Tethereal_trace', '20') ;
+my $direct_helo = &tshark(<<'End_of_Tshark_trace', '20') ;
 0020  64 17 05 0f 06 44 00 28 ab b5 20 00 01 30 02 fd   d....D.(.. ..0..
 0030  a8 e3 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................
 0040  00 00 00 00 00 00 00 00 00 00                     .........
-End_of_Tethereal_trace
+End_of_Tshark_trace
 
-my $direct_query_app = &tethereal(<<'End_of_Tethereal_trace', '2c') ;
+my $direct_query_app = &tshark(<<'End_of_Tshark_trace', '2c') ;
 0020  64 17 05 10 06 44 00 34 7a 9a 2c 00 02 32 02 fd   d....D.4z.,..2..
 0030  a8 e3 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................
 0040  00 00 00 00 00 00 21 00 02 00 01 00 00 00 00 00   ......!.........
 0050  00 00 00 00 00 00                                 ......       
-End_of_Tethereal_trace
+End_of_Tshark_trace
 
 my $Udp =  IO::Socket::INET->new( Proto => 'udp' )
 	|| die "Socket failure: $!";
diff -Naur nagios-plugins-1.4.3/contrib/check_lotus.pl nagios-plugins-1.4.3.oden/contrib/check_lotus.pl
--- nagios-plugins-1.4.3/contrib/check_lotus.pl	2005-01-25 10:04:26.000000000 +0100
+++ nagios-plugins-1.4.3.oden/contrib/check_lotus.pl	2006-09-06 17:12:49.000000000 +0200
@@ -7,7 +7,7 @@
 # New plugin to check responsiveness of Louts Notes (v5 at least) servers
 #
 # Revision 1.10  2005-01-25 15:44:07+11  anwsmh
-# 1 use packet_utils instead of hard coding subroutines (pdump and tethereal)
+# 1 use packet_utils instead of hard coding subroutines (pdump and tshark)
 # 2 redo indentation using tabs (set at 4 spaces)
 #
 
@@ -20,7 +20,7 @@
 
 use lib qw(/usr/local/nagios/libexec) ;
 use utils qw($TIMEOUT %ERRORS &print_revision &support &usage) ;
-use packet_utils qw(pdump &tethereal) ;
+use packet_utils qw(pdump &tshark) ;
 
 my $PROGNAME = 'check_lotus_notes' ;
 
@@ -69,7 +69,7 @@
 										# This info was gathered with tcpdump while using a Lotus Notes 5 client,
 										# so I'm not sure of what each value is.
 
-my $lotus_client_hello = &tethereal(<<'End_of_Tethereal_trace', '82') ;
+my $lotus_client_hello = &tshark(<<'End_of_Tshark_trace', '82') ;
 0030  ff ff dc c5 00 00 82 00 00 00 77 00 00 00 02 00   ..........w.....
 0040  00 40 02 0f 00 07 00 39 05 9e 45 54 ad ad 03 00   .@.....9..ET....
 0050  00 00 00 02 00 2f 00 00 00 00 00 00 00 00 00 40   ...../.........@
@@ -79,7 +79,7 @@
 0090  4a 08 00 10 00 00 00 00 00 00 00 00 00 00 00 00   J...............
 00a0  00 00 00 00 00 04 00 10 00 ba ac 8c 49 67 ee a1   ............Ig..
 00b0  22 6f 63 bb 04 b4 75 0b 8f 00                     "oc...u...
-End_of_Tethereal_trace
+End_of_Tshark_trace
 
 										# XXXX
 										# Notes 5 accepts this
@@ -90,7 +90,7 @@
 										# it receives malformed
 										# packets.
 
-my $lotus_client_m1 = &tethereal(<<'End_of_Tethereal_trace', 'de') ;
+my $lotus_client_m1 = &tshark(<<'End_of_Tshark_trace', 'de') ;
 0000  de 00 00 00 d4 00 00 00 13 00 00 40 01 00 9e 45  ...........@...E
 0010  54 ad ad 03 00 00 00 00 02 00 29 13 23 00 b9 68  T.........).#..h
 0020  25 00 9f 87 27 00 8f f4 25 00 00 00 88 00 24 00  %...'...%.....$.
@@ -106,7 +106,7 @@
 00c0  3d 4d 72 20 46 6f 6f 2f 4f 55 3d 42 61 72 20 68  =Mr Foo/OU=Bar h
 00d0  6f 74 65 6c 2f 4f 3d 42 61 7a 20 4a 75 6e 63 74  otel/O=Baz Junct
 00e0  69 6f 6e                                         ion
-End_of_Tethereal_trace
+End_of_Tshark_trace
 
 my $buff = '';
 
diff -Naur nagios-plugins-1.4.3/contrib/packet_utils.pm nagios-plugins-1.4.3.oden/contrib/packet_utils.pm
--- nagios-plugins-1.4.3/contrib/packet_utils.pm	2005-01-25 10:12:47.000000000 +0100
+++ nagios-plugins-1.4.3.oden/contrib/packet_utils.pm	2006-09-06 17:12:49.000000000 +0200
@@ -12,28 +12,28 @@
 	
 require Exporter;
 @ISA = qw(Exporter);
-@EXPORT_OK = qw(tethereal pdump);
+@EXPORT_OK = qw(tshark pdump);
 	
-sub tethereal {
-	my ($tethereal_dump, $start_byte) = @_ ;
+sub tshark {
+	my ($tshark_dump, $start_byte) = @_ ;
 	
-	# Return a string or array (depending on context) containing the characters from a tethereal trace.
+	# Return a string or array (depending on context) containing the characters from a tshark trace.
 	# Skip all stuff until the first byte given by $start_byte in the first row ..
 	
-	&outahere("Invalid tethereal dump:", substr($tethereal_dump, 0, 71), 'fails to match m#\d\d\d\d  \S\S(?: \S\S){1,15}#')
-		unless $tethereal_dump =~ m#\d\d\d\d  \S\S(?: \S\S){1,15}# ;
+	&outahere("Invalid tshark dump:", substr($tshark_dump, 0, 71), 'fails to match m#\d\d\d\d  \S\S(?: \S\S){1,15}#')
+		unless $tshark_dump =~ m#\d\d\d\d  \S\S(?: \S\S){1,15}# ;
 	
-	my @tethereal_dump	= split(/\n/, $tethereal_dump) ;
-	my $first_line		= shift @tethereal_dump ;
+	my @tshark_dump	= split(/\n/, $tshark_dump) ;
+	my $first_line		= shift @tshark_dump ;
 	$first_line			= unpack('x6 a48', $first_line) ;
 												# Take one extra space (after hex bytes) to use a template of 'a2 x' x 16 
 												# instead of 'a2 x' x 15 . 'a2'
-	my $last_line		= pop @tethereal_dump ;
+	my $last_line		= pop @tshark_dump ;
 	$last_line			= unpack('x6 a48', $last_line) ;
 	
 	my $idx = index($first_line, $start_byte) ;
 	
-	&outahere(qq(Invalid tethereal dump: "$start_byte" not found in first line - "$first_line")) 
+	&outahere(qq(Invalid tshark dump: "$start_byte" not found in first line - "$first_line")) 
 		if $idx == -1 ;
 	
 	$first_line = substr($first_line, $idx) ;
@@ -46,7 +46,7 @@
 	push @dump, unpack('a2x' x $bytes, $first_line) ;
 	
 	push @dump, unpack('x6 ' . 'a2x' x 16, $_) 
-		foreach @tethereal_dump ;
+		foreach @tshark_dump ;
 	
 	$bytes = 0 ;
 	$bytes++
@@ -72,7 +72,7 @@
 	my $bytes_in_last_row = $number_of_bytes % $number_in_row ;
 	my $template = "a$number_in_row " x $full_rows ;
 	my $nr = 0 ;
-												# Output format styled on tethereal.
+												# Output format styled on tshark.
 	foreach $row ( unpack($template, $x) ) {
 		@bytes_in_row = unpack('C*', $row) ;
 		$row =~ tr /\x00-\x1f\x80-\xff/./ ;
